import React from "react";

function JavaKeywords() {
    return (
        <>
            <div>
                <h1>Java Keywords</h1>
                <p>Java keywords are also known as reserved words. Keywords are particular words that act as a key to a code. These are predefined words by Java so they cannot be used as a variable or object name or class name.</p>
                <h2>List of Java Keywords</h2>
                <p>A list of Java keywords or reserved words are given below:</p>
                <p></p>
                <ol>
                    <li><strong><a href="abstract-keyword-in-java" data-attribute="2">abstract</a>:</strong> Java abstract keyword is used to declare an abstract class. An abstract class can provide the implementation of the interface. It can have abstract and non-abstract methods.</li>
                    <li><strong><a href="boolean-keyword-in-java" data-attribute="3">boolean:</a></strong> Java boolean keyword is used to declare a variable as a boolean type. It can hold True and False values only.</li>
                    <li><strong><a href="java-break" data-attribute="4">break</a>:</strong> Java break keyword is used to break the loop or switch statement. It breaks the current flow of the program at specified conditions.</li>
                    <li><strong><a href="byte-keyword-in-java" data-attribute="5">byte</a>:</strong> Java byte keyword is used to declare a variable that can hold 8-bit data values.</li>
                    <li><strong><a href="case-keyword-in-java" data-attribute="6">case</a>:</strong> Java case keyword is used with the switch statements to mark blocks of text.</li>
                    <li><strong><a href="try-catch-block" data-attribute="7">catch</a>:</strong> Java catch keyword is used to catch the exceptions generated by try statements. It must be used after the try block only.</li>
                    <li><strong><a href="char-keyword-in-java" data-attribute="8">char</a>:</strong> Java char keyword is used to declare a variable that can hold unsigned 16-bit Unicode characters</li>
                    <li><strong><a href="class-keyword-in-java" data-attribute="9">class</a>:</strong> Java class keyword is used to declare a class.</li>
                    <li><strong><a href="java-continue" data-attribute="10">continue</a>:</strong> Java continue keyword is used to continue the loop. It continues the current flow of the program and skips the remaining code at the specified condition.</li>
                    <li><strong><a href="default-keyword-in-java" data-attribute="11">default</a>:</strong> Java default keyword is used to specify the default block of code in a switch statement.</li>
                    <li><strong><a href="java-do-while-loop" data-attribute="12">do</a>:</strong> Java do keyword is used in the control statement to declare a loop. It can iterate a part of the program several times.</li>
                    <li><strong><a href="double-keyword-in-java" data-attribute="13">double</a>:</strong> Java double keyword is used to declare a variable that can hold 64-bit floating-point number.</li>
                    <li><strong><a href="java-if-else" data-attribute="14">else</a>:</strong> Java else keyword is used to indicate the alternative branches in an if statement.</li>
                    <li><strong><a href="enum-in-java" data-attribute="15">enum</a>:</strong> Java enum keyword is used to define a fixed set of constants. Enum constructors are always private or default.</li>
                    <li><strong><a href="inheritance-in-java" data-attribute="16">extends</a>:</strong> Java extends keyword is used to indicate that a class is derived from another class or interface.</li>
                    <li><strong><a href="final-keyword" data-attribute="17">final</a>:</strong> Java final keyword is used to indicate that a variable holds a constant value. It is used with a variable. It is used to restrict the user from updating the value of the variable.</li>
                    <li><strong><a href="finally-block-in-exception-handling" data-attribute="18">finally</a>:</strong> Java finally keyword indicates a block of code in a try-catch structure. This block is always executed whether an exception is handled or not.</li>
                    <li><strong><a href="float-keyword-in-java" data-attribute="19">float</a>:</strong> Java float keyword is used to declare a variable that can hold a 32-bit floating-point number.</li>
                    <li><strong><a href="java-for-loop" data-attribute="20">for</a>:</strong> Java for keyword is used to start a for loop. It is used to execute a set of instructions/functions repeatedly when some condition becomes true. If the number of iteration is fixed, it is recommended to use for loop.</li>
                    <li><strong><a href="java-if-else" data-attribute="21">if</a>:</strong> Java if keyword tests the condition. It executes the if block if the condition is true.</li>
                    <li><strong><a href="interface-in-java" data-attribute="22">implements</a>:</strong> Java implements keyword is used to implement an interface. </li>
                    <li><strong><a href="package" data-attribute="23">import</a>:</strong> Java import keyword makes classes and interfaces available and accessible to the current source code.</li>
                    <li><strong><a href="downcasting-with-instanceof-operator" data-attribute="24">instanceof</a>:</strong> Java instanceof keyword is used to test whether the object is an instance of the specified class or implements an interface.</li>
                    <li><strong><a href="int-keyword-in-java" data-attribute="25">int</a>:</strong> Java int keyword is used to declare a variable that can hold a 32-bit signed integer.</li>
                    <li><strong><a href="interface-in-java" data-attribute="26">interface</a>:</strong> Java interface keyword is used to declare an interface. It can have only abstract methods.</li>
                    <li><strong><a href="long-keyword-in-java" data-attribute="27">long</a>:</strong> Java long keyword is used to declare a variable that can hold a 64-bit integer.</li>
                    <li><strong>native:</strong> Java native keyword is used to specify that a method is implemented in native code using JNI (Java Native Interface).</li>
                    <li><strong><a href="new-keyword-in-java" data-attribute="28">new</a>:</strong> Java new keyword is used to create new objects.</li>
                    <li><strong><a href="null-keyword-in-java" data-attribute="29">null</a>:</strong> Java null keyword is used to indicate that a reference does not refer to anything. It removes the garbage value.</li>
                    <li><strong><a href="package" data-attribute="30">package</a>:</strong> Java package keyword is used to declare a Java package that includes the classes.</li>
                    <li><strong><a href="private-keyword-in-java" data-attribute="31">private</a>:</strong> Java private keyword is an access modifier. It is used to indicate that a method or variable may be accessed only in the class in which it is declared.</li>
                    <li><strong><a href="protected-keyword-in-java" data-attribute="32">protected</a>:</strong> Java protected keyword is an access modifier. It can be accessible within the package and outside the package but through inheritance only. It can't be applied with the class.</li>
                    <li><strong><a href="public-keyword-in-java" data-attribute="33">public</a>:</strong> Java public keyword is an access modifier. It is used to indicate that an item is accessible anywhere. It has the widest scope among all other modifiers.	</li>
                    <li><strong><a href="return-keyword-in-java" data-attribute="34">return</a>:</strong> Java return keyword is used to return from a method when its execution is complete.</li>
                    <li><strong><a href="short-keyword-in-java" data-attribute="35">short</a>:</strong> Java short keyword is used to declare a variable that can hold a 16-bit integer.</li>
                    <li><strong><a href="static-keyword-in-java" data-attribute="36">static</a>:</strong> Java static keyword is used to indicate that a variable or method is a class method. The static keyword in Java is mainly used for memory management.</li>
                    <li><strong><a href="strictfp-keyword" data-attribute="37">strictfp</a>:</strong> Java strictfp is used to restrict the floating-point calculations to ensure portability.</li>
                    <li><strong><a href="super-keyword" data-attribute="38">super</a>:</strong> Java super keyword is a reference variable that is used to refer to parent class objects. It can be used to invoke the immediate parent class method.</li>
                    <li><strong><a href="java-switch" data-attribute="39">switch</a>:</strong> The Java switch keyword contains a switch statement that executes code based on test value. The switch statement tests the equality of a variable against multiple values.</li>
                    <li><strong><a href="synchronization-in-java" data-attribute="40">synchronized</a>:</strong> Java synchronized keyword is used to specify the critical sections or methods in multithreaded code. </li>
                    <li><strong><a href="this-keyword" data-attribute="41">this</a>:</strong> Java this keyword can be used to refer the current object in a method or constructor.</li>
                    <li><strong><a href="throw-keyword" data-attribute="42">throw</a>:</strong> The Java throw keyword is used to explicitly throw an exception. The throw keyword is mainly used to throw custom exceptions. It is followed by an instance.</li>
                    <li><strong><a href="throws-keyword-and-difference-between-throw-and-throws" data-attribute="43">throws</a>:</strong> The Java throws keyword is used to declare an exception. Checked exceptions can be propagated with throws.</li>
                    <li><strong><a href="transient-keyword" data-attribute="44">transient</a>:</strong> Java transient keyword is used in serialization. If you define any data member as transient, it will not be serialized.</li>
                    <li><strong><a href="try-catch-block" data-attribute="45">try</a>:</strong> Java try keyword is used to start a block of code that will be tested for exceptions. The try block must be followed by either catch or finally block.</li>
                    <li><strong>void:</strong> Java void keyword is used to specify that a method does not have a return value.</li>
                    <li><strong><a href="volatile-keyword-in-java" data-attribute="46">volatile</a>:</strong> Java volatile keyword is used to indicate that a variable may change asynchronously.</li>
                    <li><strong><a href="java-while-loop" data-attribute="47">while</a>:</strong> Java while keyword is used to start a while loop. This loop iterates a part of the program several times. If the number of iteration is not fixed, it is recommended to use the while loop.</li>
                </ol>
            </div>
        </>
    )
}

export default JavaKeywords;